###---- Instalacion de paquetes ----
install.packages("dplyr")    # Manipulación de datos
install.packages("dplyr")
###---- Cargar paquetes ----
library(dplyr)     # Manipulación de datos
library(tidyr)     # Manipulación de datos
library(tidyverse) # Manipulación de datos
library(reshape2)  # Transformación de datos
library(cowplot)   # Visualización grafica
library(ggplot2)   # Generar varios graficos en una misma figura
library(RColorBrewer) # Paletas de colores, Info en https://r-graph-gallery.com/38-rcolorbrewers-palettes.html
library(paletteer) # Paletas de colores, Info en https://pmassicotte.github.io/paletteer_gallery/
## Obtener gama de colores
display.brewer.all()
###--- Directorio ----
# getwd() # nota de aqui saque la direccion
indir <- "/Users/sofiasalazar/Desktop/LAB/ViernesBioinfo2024/Clase_ggplot/"
###--- Data ----
infoCharacters <- read.csv(paste0(indir,"data/heroesInformation.csv"), na.strings = c("-", "-99")) # La opcion na.string nos permite sustituir valores - y -99 por NA
infoPowers <- read.csv(paste0(indir,"data/superHeroPowers.csv"))
infoStats <- read.csv(paste0(indir,"data/charactersStats.csv"), na.strings = "")
infoPowers <- read.csv(paste0(indir,"data/superHeroPowers.csv"))
infoStats <- read.csv(paste0(indir,"data/charactersStats.csv"), na.strings = "")
#Base de datos de los valores de Home ranch (rango de hogar) (log10) y valores de masa corporal (log10) para 462 especies de mamíferos
#Tucker, M. A. et al; Home range-body size patterns: are all mammals equal?
#https://onlinelibrary.wiley.com/journal/14668238?journalRedirectCheck=true
bd<- read.csv(paste0(indir,"MMHOME.csv"))
###--- Resumen de la informacion ----
summary(infoCharacters)
summary(infoPowers)
summary(infoStats)
summary(bd)
###--- Data ----
head(infoCharacters)
head(infoPowers)
head(infoStats)
colnames(infoCharacters)[colnames(infoCharacters) == "name"] <- "Name"
colnames(infoPowers)[colnames(infoPowers) == "hero_names"] <- "Name"
# Empresas comprendidas en esta base de datos
unique(infoCharacters$Publisher)
marvelDcInfo <- infoCharacters[(infoCharacters$Publisher == "Marvel Comics" | infoCharacters$Publisher == "DC Comics"), ]
head(marvelDcInfo)
dim(marvelDcInfo)
marvelDcInfo[duplicated(marvelDcInfo$Name), ] %>% head()
subset(marvelDcInfo, Name== "Batgirl")
marvelDcInfo <- marvelDcInfo[!duplicated(marvelDcInfo$Name), ]
marvelDcInfo <- marvelDcInfo %>%
select(Name, Gender, Race, Publisher)
marvelDcStatsInfo <- left_join(marvelDcInfo, infoStats, by = "Name")
head(marvelDcStatsInfo)[1:5]
fullMarvelDc <- left_join(marvelDcStatsInfo, infoPowers, by = "Name")
head(fullMarvelDc)[1:5]
class(fullMarvelDc$Name)
class(fullMarvelDc$Gender)
class(fullMarvelDc$Race)
class(fullMarvelDc$Publisher)
class(fullMarvelDc$Alignment)
dim(fullMarvelDc)
fullMarvelDc$Name <- as.factor(fullMarvelDc$Name)
fullMarvelDc$Gender <- as.factor(fullMarvelDc$Gender)
fullMarvelDc$Race <- as.factor(fullMarvelDc$Race)
fullMarvelDc$Publisher <- as.factor(fullMarvelDc$Publisher)
fullMarvelDc$Alignment <- as.factor(fullMarvelDc$Alignment)
class(fullMarvelDc$Name)
class(fullMarvelDc$Gender)
class(fullMarvelDc$Race)
class(fullMarvelDc$Publisher)
class(fullMarvelDc$Alignment)
## ¿Cuántos personajes son mujeres y hombres hay por cada empresa?
# Opcion B
marvelDcGender <- fullMarvelDc %>% filter(!is.na(Gender)) %>%
group_by(Gender)%>%
dplyr::count(Publisher) %>%
select(Gender, Publisher, Count = n)
marvelDcGender
source("~/Desktop/LAB/ViernesBioinfo2024/Clase_ggplot/script_ggplot_clase.R", echo=TRUE)
install.packages("tidyverse")
install.packages("tidyr")
###---- Cargar paquetes ----
library(dplyr)     # Manipulación de datos
library(tidyr)     # Manipulación de datos
library(tidyverse) # Manipulación de datos
library(reshape2)  # Transformación de datos
library(pacman)
library(cowplot)   # Visualización grafica
library(ggplot2)   # Generar varios graficos en una misma figura
library(RColorBrewer) # Paletas de colores, Info en https://r-graph-gallery.com/38-rcolorbrewers-palettes.html
library(paletteer) # Paletas de colores, Info en https://pmassicotte.github.io/paletteer_gallery/
## Obtener gama de colores
display.brewer.all()
###--- Directorio ----
# getwd() # nota de aqui saque la direccion
indir <- "/Users/sofiasalazar/Desktop/LAB/ViernesBioinfo2024/Clase_ggplot/"
infoCharacters <- read.csv(paste0(indir,"data/heroesInformation.csv"), na.strings = c("-", "-99")) # La opcion na.string nos permite sustituir valores - y -99 por NA
infoPowers <- read.csv(paste0(indir,"data/superHeroPowers.csv"))
infoStats <- read.csv(paste0(indir,"data/charactersStats.csv"), na.strings = "")
#Base de datos de los valores de Home ranch (rango de hogar) (log10) y valores de masa corporal (log10) para 462 especies de mamíferos
#Tucker, M. A. et al; Home range-body size patterns: are all mammals equal?
#https://onlinelibrary.wiley.com/journal/14668238?journalRedirectCheck=true
bd<- read.csv(paste0(indir,"MMHOME.csv"))
infoCharacters <- read.csv(paste0(indir,"data/heroesInformation.csv"), na.strings = c("-", "-99")) # La opcion na.string nos permite sustituir valores - y -99 por NA
infoPowers <- read.csv(paste0(indir,"data/superHeroPowers.csv"))
infoStats <- read.csv(paste0(indir,"data/charactersStats.csv"), na.strings = "")
#Base de datos de los valores de Home ranch (rango de hogar) (log10) y valores de masa corporal (log10) para 462 especies de mamíferos
#Tucker, M. A. et al; Home range-body size patterns: are all mammals equal?
#https://onlinelibrary.wiley.com/journal/14668238?journalRedirectCheck=true
bd<- read.csv(paste0(indir,"data/MMHOME.csv"))
###--- Resumen de la informacion ----
summary(infoCharacters)
summary(infoPowers)
summary(infoStats)
summary(bd)
###--- Data ----
head(infoCharacters)
head(infoPowers)
head(infoStats)
###--- PROCESAMIENTO DE DATOS----
colnames(infoCharacters)[colnames(infoCharacters) == "name"] <- "Name"
colnames(infoPowers)[colnames(infoPowers) == "hero_names"] <- "Name"
unique(infoCharacters$Publisher)
marvelDcInfo <- infoCharacters[(infoCharacters$Publisher == "Marvel Comics" | infoCharacters$Publisher == "DC Comics"), ]
marvelDcInfo <- marvelDcInfo[!duplicated(marvelDcInfo$Name), ]
marvelDcInfo <- marvelDcInfo %>%
select(Name, Gender, Race, Publisher)
marvelDcStatsInfo <- left_join(marvelDcInfo, infoStats, by = "Name")
head(marvelDcStatsInfo)[1:5]
fullMarvelDc <- left_join(marvelDcStatsInfo, infoPowers, by = "Name")
head(fullMarvelDc)[1:5]
fullMarvelDc$Name <- as.factor(fullMarvelDc$Name)
fullMarvelDc$Gender <- as.factor(fullMarvelDc$Gender)
fullMarvelDc$Race <- as.factor(fullMarvelDc$Race)
fullMarvelDc$Publisher <- as.factor(fullMarvelDc$Publisher)
fullMarvelDc$Alignment <- as.factor(fullMarvelDc$Alignment)
ggplot(data = marvelDcGender, mapping = aes(x = Gender, y = Count))
marvelDcGender <- fullMarvelDc %>% filter(!is.na(Gender)) %>%
group_by(Gender)%>%
dplyr::count(Publisher) %>%
select(Gender, Publisher, Count = n)
View(marvelDcGender)
ggplot(data = marvelDcGender, mapping = aes(x = Gender, y = Count))
ggplot(data = marvelDcGender, mapping = aes(x = Gender, y = Count))
ggplot(data = marvelDcGender) +
geom_point(mapping = aes(x = Gender, y = Count)) # Grafica de puntos
###--- Directorio ----
# getwd() # nota de aqui saque la direccion
indir <- "/Users/sofiasalazar/Desktop/YO/misc_tutorials/04_ggplot2/"
outdir <- "/Users/sofiasalazar/Desktop/YO/misc_tutorials/04_ggplot2/"
###--- Data ----
infoCharacters <- read.csv(paste0(indir,"heroesInformation.csv"), na.strings = c("-", "-99")) # La opcion na.string nos permite sustituir valores - y -99 por NA
infoPowers <- read.csv(paste0(indir,"superHeroPowers.csv"))
infoStats <- read.csv(paste0(indir,"charactersStats.csv"), na.strings = "")
#Base de datos de los valores de Home ranch (rango de hogar) (log10) y valores de masa corporal (log10) para 462 especies de mamíferos
#Tucker, M. A. et al; Home range-body size patterns: are all mammals equal?
#https://onlinelibrary.wiley.com/journal/14668238?journalRedirectCheck=true
bd<- read.csv(paste0(indir,"MMHOME.csv"))
###--- Resumen de la informacion ----
summary(infoCharacters)
summary(infoPowers)
summary(infoStats)
summary(bd)
###--- Data ----
head(infoCharacters)
head(infoPowers)
head(infoStats)
colnames(infoCharacters)[colnames(infoCharacters) == "name"] <- "Name"
colnames(infoPowers)[colnames(infoPowers) == "hero_names"] <- "Name"
# Empresas comprendidas en esta base de datos
unique(infoCharacters$Publisher)
marvelDcInfo <- infoCharacters[(infoCharacters$Publisher == "Marvel Comics" | infoCharacters$Publisher == "DC Comics"), ]
head(marvelDcInfo)
dim(marvelDcInfo)
marvelDcInfo[duplicated(marvelDcInfo$Name), ] %>% head()
subset(marvelDcInfo, Name== "Batgirl")
marvelDcInfo <- marvelDcInfo[!duplicated(marvelDcInfo$Name), ]
marvelDcInfo <- marvelDcInfo %>%
select(Name, Gender, Race, Publisher)
marvelDcStatsInfo <- left_join(marvelDcInfo, infoStats, by = "Name")
head(marvelDcStatsInfo)[1:5]
fullMarvelDc <- left_join(marvelDcStatsInfo, infoPowers, by = "Name")
head(fullMarvelDc)[1:5]
class(fullMarvelDc$Name)
class(fullMarvelDc$Gender)
class(fullMarvelDc$Race)
class(fullMarvelDc$Publisher)
class(fullMarvelDc$Alignment)
dim(fullMarvelDc)
fullMarvelDc$Name <- as.factor(fullMarvelDc$Name)
fullMarvelDc$Gender <- as.factor(fullMarvelDc$Gender)
fullMarvelDc$Race <- as.factor(fullMarvelDc$Race)
fullMarvelDc$Publisher <- as.factor(fullMarvelDc$Publisher)
fullMarvelDc$Alignment <- as.factor(fullMarvelDc$Alignment)
class(fullMarvelDc$Name)
class(fullMarvelDc$Gender)
class(fullMarvelDc$Race)
class(fullMarvelDc$Publisher)
class(fullMarvelDc$Alignment)
## ¿Cuántos personajes son mujeres y hombres hay por cada empresa?
# Opcion B
marvelDcGender <- fullMarvelDc %>% filter(!is.na(Gender)) %>%
group_by(Gender)%>%
dplyr::count(Publisher) %>%
select(Gender, Publisher, Count = n)
marvelDcGender
ggplot(data = marvelDcGender, mapping = aes(x = Gender, y = Count))
ggplot(data = marvelDcGender) +
geom_point(mapping = aes(x = Gender, y = Count)) # Grafica de puntos
#a. Agregar elementos aeshetics al mapping
ggplot(marvelDcGender) +
geom_point(mapping = aes(x = Gender, y = Count, colour= Publisher))
library(ggplot2)   # Generar varios graficos en una misma figura
ggplot(data = marvelDcGender, mapping = aes(x = Gender, y = Count))
ggplot(data = marvelDcGender, mapping = aes(x = Gender, y = Count))
